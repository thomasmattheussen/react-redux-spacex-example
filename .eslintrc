{
  "extends": [
    "react-app"
  ],
  "rules": {
        "curly": ["error", "multi-line"],
        "dot-notation": ["error", {
            "allowKeywords": true
        }],
        "eqeqeq": "error",
        "guard-for-in": "error",
        "no-caller": "error",
        "no-else-return": "error",
        "no-eq-null": "error",
        "no-eval": "error",
        "no-extend-native": "error",
        "no-extra-bind": "error",
        "no-fallthrough": "error",
        "no-floating-decimal": "error",
        "no-implied-eval": "error",
        "no-lone-blocks": "error",
        "no-loop-func": "error",
        "no-multi-str": "error",
        "no-native-reassign": "error",
        "no-new": "error",
        "no-new-func": "error",
        "no-new-wrappers": "error",
        "no-octal": "error",
        "no-octal-escape": "error",
        "no-param-reassign": "error",
        "no-proto": "error",
        "no-redeclare": "error",
        "no-return-assign": "error",
        "no-script-url": "error",
        "no-self-compare": "error",
        "no-sequences": "error",
        "no-throw-literal": "error",
        "no-with": "error",
        "radix": "error",
        "vars-on-top": "error",
        "wrap-iife": ["error", "any"],
        "yoda": "error",
        "comma-dangle": ["error", {
            "arrays": "always-multiline",
            "objects": "always-multiline"
        }],
        "no-cond-assign": ["error", "always"],
        "no-console": "warn",
        "no-undef": "warn",
        "no-debugger": "warn",
        "no-alert": "warn",
        "no-constant-condition": "warn",
        "no-dupe-keys": "error",
        "no-duplicate-case": "error",
        "no-empty": ["error", {
            "allowEmptyCatch": true
        }],
        "no-ex-assign": "error",
        "no-extra-boolean-cast": "off",
        "no-extra-semi": "error",
        "no-func-assign": "error",
        "no-inner-declarations": "error",
        "no-invalid-regexp": "error",
        "no-irregular-whitespace": "error",
        "no-obj-calls": "error",
        "no-sparse-arrays": "error",
        "no-unreachable": "error",
        "use-isnan": "error",
        "block-scoped-var": "error",
        "no-var": "error",
        "strict": ["error", "never"], // babel inserts "use strict"; for us
        "indent": ["error", 4, {
            "SwitchCase": 1
        }],
        "brace-style": ["error", "1tbs", {
            "allowSingleLine": true
        }],
        "quotes": [
            "error",
            "single",
            "avoid-escape"
        ],
        "comma-spacing": ["error", {
            "before": false,
            "after": true
        }],
        "comma-style": ["error", "last"],
        "eol-last": "error",
        "key-spacing": ["error", {
            "beforeColon": false,
            "afterColon": true
        }],
        "new-cap": ["error", {
            "newIsCap": true
        }],
        "no-multiple-empty-lines": ["error", {
            "max": 2
        }],
        "no-multi-spaces": "error",
        "no-new-object": "error",
        "no-spaced-func": "error",
        "no-trailing-spaces": "error",
        "no-extra-parens": ["error", "functions"],
        "no-underscore-dangle": "off",
        "one-var": ["error", "never"],
        "padded-blocks": ["error", "never"],
        "semi": ["error", "always"],
        "semi-spacing": ["error", {
            "before": false,
            "after": true
        }],
        "keyword-spacing": "error",
        "space-before-blocks": "error",
        "space-before-function-paren": ["error", "never"],
        "space-infix-ops": "error",
        "switch-colon-spacing": ["error", {
            "after": true,
            "before": false
        }],
        "object-curly-newline": ["error", {
            "consistent": true
        }],
        "object-curly-spacing": ["error", "always", {
            "objectsInObjects": false
        }],
        "no-shadow": "error",
        "no-shadow-restricted-names": "error",
        "no-unused-vars": ["warn", {
            "vars": "local",
            "args": "after-used"
        }],
        "no-use-before-define": "error"
  }
}
